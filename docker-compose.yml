services:
  # Database
  db:
    image: postgres:16-alpine
    container_name: teddy-db
    environment:
      POSTGRES_DB: teddy
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Redis
  redis:
    image: redis:7-alpine
    container_name: teddy-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  # API (NestJS)
  api:
    build:
      context: .
      dockerfile: infra/docker/api.Dockerfile
    container_name: teddy-api
    environment:
      - NODE_ENV=development
      - DATABASE_URL=postgresql://postgres:postgres@db:5432/teddy?schema=public
      - REDIS_URL=redis://redis:6379
    ports:
      - "3001:3001"
    volumes:
      - ./apps/bot:/app/apps/bot
      - ./packages:/app/packages
      - ./prisma:/app/prisma
      - ./storage:/app/storage
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3001/api/healthz"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Admin (Next.js)
  admin:
    build:
      context: .
      dockerfile: infra/docker/admin.Dockerfile
    container_name: teddy-admin
    environment:
      - NODE_ENV=development
      - NEXT_PUBLIC_API_URL=http://localhost:8080/api
    ports:
      - "3000:3000"
    volumes:
      - ./apps/admin:/app/apps/admin
      - ./packages:/app/packages
    depends_on:
      - api

  # Worker (BullMQ)
  worker:
    build:
      context: .
      dockerfile: infra/docker/worker.Dockerfile
    container_name: teddy-worker
    environment:
      - NODE_ENV=development
      - DATABASE_URL=postgresql://postgres:postgres@db:5432/teddy?schema=public
      - REDIS_URL=redis://redis:6379
    volumes:
      - ./apps/worker:/app/apps/worker
      - ./packages:/app/packages
      - ./storage:/app/storage
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy

  # Nginx (Reverse Proxy)
  nginx:
    image: nginx:alpine
    container_name: teddy-nginx
    ports:
      - "8080:80"
    volumes:
      - ./infra/nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./storage:/var/www/storage:ro
    depends_on:
      - api
      - admin

volumes:
  postgres_data:
  redis_data:
